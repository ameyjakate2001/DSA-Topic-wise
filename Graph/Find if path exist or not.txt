
 Question Link :- https://leetcode.com/problems/find-if-path-exists-in-graph/
 

     **find if path exist or not between start and end
        => Simple Bfs


     bool validPath(int n, vector<vector<int>>& edges, int start, int end) {
        
       //Making Adjacency List
       vector<int>a[n];
       for(int i=0; i<edges.size(); i++) {
           a[edges[i][0]].push_back(edges[i][1]);
           a[edges[i][1]].push_back(edges[i][0]);
       }
        
        queue<int>q;
        bool visited[n];
        for(int i=0; i<n; i++) visited[i] = false;
        
       q.push(start);
       visited[start] = true;
        int c = 0;
       // Traversing from Start
       while(!q.empty()) {
           int front = q.front();
           q.pop();
           
           for(int i=0; i<a[front].size(); i++) {
               if(!visited[a[front][i]]) {
                   visited[a[front][i]] = true;
                   if(a[front][i] == end){
                      c=1;
                      break;
                   }
                   q.push(a[front][i]);
               }
                   
           }
           if(c == 1) break;
           
       }
       return visited[end];
    }