
    Problem Link: https://leetcode.com/problems/number-of-islands/

    Explanation:
       what we will do is, we will start from the 1st node and will visit all his connections as connections are 
       given as vertical, left, right, horizental directions.
       
       and we will mark the visited node so that we will not take that node in consideration afterwards.

    
     Code:


        void dfs(vector<vector<char>>& grid, int i, int j){
        if(i<0 || i>=grid.size() || j<0 || j>=grid[i].size() || grid[i][j]==0) return;
        else if(grid[i][j]=='1'){ //Traversing its adjacent cells and marking them as visited(by flipping 1s to 0s).
                grid[i][j]=0;
                dfs(grid,i+1,j); //Here adjacent cells can be top,bottom,the cell on the right and that on the left
                dfs(grid,i-1,j);
                dfs(grid,i,j+1);
                dfs(grid,i,j-1);
             }
    }
    
    int numIslands(vector<vector<char>>& grid) {
        if(grid.size()==0) return 0;
        int ans=0;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
                if(grid[i][j]=='1'){
                    dfs(grid,i,j);
                    ans++; 
                }
                
            }
        }
        return ans;
    }
 