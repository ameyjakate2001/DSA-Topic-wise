
 
  Problem Link :- https://leetcode.com/problems/all-paths-from-source-to-target/

  ** All Paths From Source to Target


  Explanation :- We Will do it by ( Dfs + Backtracking ) .
       we will traverse the connections, when we will find our target , we backtrack .


    


  Answer => 

      void dfs(int source, vector<vector<int>>graph, vector<vector<int>> &ans, vector<int>path, int n){

        if(source == n-1) {
            ans.push_back(path);
            return;
        }
        
        for(int i=0; i<graph[source].size(); i++){
            path.push_back(graph[source][i]);
            dfs(graph[source][i], graph, ans, path, n);
            path.pop_back();
        }
    }
    
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        
        vector<vector<int>> ans;
        vector<int> path;
        int nodes = graph.size();
        path.push_back(0);
        
         dfs(0, graph, ans, path, nodes);
         
        return ans;
          
    }